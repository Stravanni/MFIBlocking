<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>il.ac.technion.ie</groupId>
    <artifactId>MFIblocks</artifactId>
    <version>0.0.1</version>
  </parent>
  <artifactId>original</artifactId>
  <name>original</name>
  <properties>
      <powermock.version>1.5.4</powermock.version>
      <easymock.version>3.2</easymock.version>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>fimEntityResolution.BottomUp</mainClass>
                </transformer>
				<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
					<resource>reference.conf</resource>                  
				</transformer>
              </transformers>
				<filters>
				<filter>
					<artifact>*:*</artifact>
					<excludes>
						<exclude>META-INF/*.SF</exclude>
						<exclude>META-INF/*.DSA</exclude>
						<exclude>META-INF/*.RSA</exclude>
					</excludes>
				</filter>
				</filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencies>
	
	<!-- 
	<dependency>
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-core</artifactId>
		<version>3.0.1</version>
	</dependency>
	<dependency>
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-analyzers</artifactId>
		<version>3.0.3</version>
	</dependency>
	 -->
	 
	 
	 
	<dependency>
		<groupId>org.neo4j</groupId>
		<artifactId>neo4j-kernel</artifactId>
		<version>1.4.2</version>
	</dependency>
	<dependency>
		<groupId>org.neo4j</groupId>
		<artifactId>neo4j-lucene-index</artifactId>
		<version>2.0.0</version>
	</dependency>        
   	<dependency>
      	<groupId>org.hyperic</groupId>
      	<artifactId>sigar</artifactId>
      	<version>1.6.5.132</version>
    </dependency>
    <dependency>
		<groupId>com.googlecode.javaewah</groupId>
		<artifactId>JavaEWAH</artifactId>
		<version>0.7.9</version>
	</dependency>
	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>1.3.2</version>
	</dependency>
	<dependency>
        <groupId>dnl.utils</groupId>
        <artifactId>j-text-utils</artifactId>
        <version>0.3.3</version>
	</dependency>
	<dependency>
		<groupId>joda-time</groupId>
		<artifactId>joda-time</artifactId>
		<version>2.3</version>
	</dependency>
            
     <dependency>
        <groupId>net.sf.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>1.7</version>   
    </dependency>
   	
   
    <!-- Lucene -->
	<dependency>
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-core</artifactId>
		<version>4.8.0</version>
	</dependency>
	<dependency>
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-queries</artifactId>
		<version>4.8.0</version>
	</dependency>
	<dependency>
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-queryparser</artifactId>
		<version>4.8.0</version>
	</dependency>
	<dependency>
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-analyzers-common</artifactId>
		<version>4.8.0</version>
	</dependency>
	<dependency>
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-analyzers</artifactId>
		<version>3.6.2</version>
	</dependency>
    
	<!-- JARS that were installed manually -->
	<dependency>
		<groupId>com.javamex</groupId>
		<artifactId>Classmexer</artifactId>
		<version>0.03</version>
	</dependency>
	<dependency>
		<groupId>org.enerj.core</groupId>
		<artifactId>SBS</artifactId>
		<version>0.0.1</version>
	</dependency>
	<dependency>
		<groupId>uk.ac.shef.wit</groupId>
		<artifactId>simmetrics</artifactId>
		<version>1.6.2</version>
	</dependency>
	<!-- Testing dependincies -->
	<dependency>
    	<groupId>org.powermock</groupId>
     	<artifactId>powermock-module-junit4</artifactId>
     	<version>${powermock.version}</version>
     	<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.powermock</groupId>
     	<artifactId>powermock-api-easymock</artifactId>
     	<version>${powermock.version}</version>
     	<scope>test</scope>  
    </dependency>  
	<dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <version>${powermock.version}</version>
	  <exclusions>
			<exclusion>
				<artifactId>hamcrest-core</artifactId>
				<groupId>org.hamcrest</groupId>
			</exclusion>
		</exclusions>
      <scope>test</scope>
   </dependency>
	<dependency>
	    <groupId>org.powermock</groupId>
		<artifactId>powermock-module-junit4-rule</artifactId>
		<version>${powermock.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.powermock</groupId>
		<artifactId>powermock-classloading-xstream</artifactId>
		<version>${powermock.version}</version>
		<scope>test</scope>
	</dependency>
		<dependency>
		<groupId>org.easymock</groupId>
		<artifactId>easymock</artifactId>
		<version>${easymock.version}</version>
		<scope>test</scope>
	</dependency>
	<!-- Spark dependincies -->
	<dependency>
		<groupId>org.apache.spark</groupId>
		<artifactId>spark-core_2.10</artifactId>
		<version>1.0.0</version>
	</dependency>
	<!-- Mohout - distributed fpgrowth 
	<dependency>
    	<groupId>org.apache.mahout</groupId>
    	<artifactId>mahout-core</artifactId>
    	<version>0.9</version>
	</dependency>-->
  </dependencies>
</project>
